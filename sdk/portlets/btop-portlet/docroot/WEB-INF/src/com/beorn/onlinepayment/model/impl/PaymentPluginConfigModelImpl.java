/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.beorn.onlinepayment.model.impl;

import com.beorn.onlinepayment.model.PaymentPluginConfig;
import com.beorn.onlinepayment.model.PaymentPluginConfigModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PaymentPluginConfig service. Represents a row in the &quot;Payment_PaymentPluginConfig&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.beorn.onlinepayment.model.PaymentPluginConfigModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentPluginConfigImpl}.
 * </p>
 *
 * @author Sebastien Meunier
 * @see PaymentPluginConfigImpl
 * @see com.beorn.onlinepayment.model.PaymentPluginConfig
 * @see com.beorn.onlinepayment.model.PaymentPluginConfigModel
 * @generated
 */
public class PaymentPluginConfigModelImpl extends BaseModelImpl<PaymentPluginConfig>
	implements PaymentPluginConfigModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payment plugin config model instance should use the {@link com.beorn.onlinepayment.model.PaymentPluginConfig} interface instead.
	 */
	public static final String TABLE_NAME = "Payment_PaymentPluginConfig";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "paymentPluginConfigId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "sellerId", Types.BIGINT },
			{ "paymentPluginId", Types.BIGINT },
			{ "config", Types.CLOB },
			{ "configured", Types.BOOLEAN },
			{ "defaultPlugin", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table Payment_PaymentPluginConfig (uuid_ VARCHAR(75) null,companyId LONG,groupId LONG,userId LONG,paymentPluginConfigId LONG not null primary key,createDate DATE null,modifiedDate DATE null,sellerId LONG,paymentPluginId LONG,config TEXT null,configured BOOLEAN,defaultPlugin BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table Payment_PaymentPluginConfig";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentPluginConfig.paymentPluginId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Payment_PaymentPluginConfig.paymentPluginId DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.beorn.onlinepayment.model.PaymentPluginConfig"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.beorn.onlinepayment.model.PaymentPluginConfig"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.beorn.onlinepayment.model.PaymentPluginConfig"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long DEFAULTPLUGIN_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long PAYMENTPLUGINID_COLUMN_BITMASK = 8L;
	public static long SELLERID_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.beorn.onlinepayment.model.PaymentPluginConfig"));

	public PaymentPluginConfigModelImpl() {
	}

	public long getPrimaryKey() {
		return _paymentPluginConfigId;
	}

	public void setPrimaryKey(long primaryKey) {
		setPaymentPluginConfigId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_paymentPluginConfigId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return PaymentPluginConfig.class;
	}

	public String getModelClassName() {
		return PaymentPluginConfig.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("paymentPluginConfigId", getPaymentPluginConfigId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("sellerId", getSellerId());
		attributes.put("paymentPluginId", getPaymentPluginId());
		attributes.put("config", getConfig());
		attributes.put("configured", getConfigured());
		attributes.put("defaultPlugin", getDefaultPlugin());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long paymentPluginConfigId = (Long)attributes.get(
				"paymentPluginConfigId");

		if (paymentPluginConfigId != null) {
			setPaymentPluginConfigId(paymentPluginConfigId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long sellerId = (Long)attributes.get("sellerId");

		if (sellerId != null) {
			setSellerId(sellerId);
		}

		Long paymentPluginId = (Long)attributes.get("paymentPluginId");

		if (paymentPluginId != null) {
			setPaymentPluginId(paymentPluginId);
		}

		String config = (String)attributes.get("config");

		if (config != null) {
			setConfig(config);
		}

		Boolean configured = (Boolean)attributes.get("configured");

		if (configured != null) {
			setConfigured(configured);
		}

		Boolean defaultPlugin = (Boolean)attributes.get("defaultPlugin");

		if (defaultPlugin != null) {
			setDefaultPlugin(defaultPlugin);
		}
	}

	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getPaymentPluginConfigId() {
		return _paymentPluginConfigId;
	}

	public void setPaymentPluginConfigId(long paymentPluginConfigId) {
		_paymentPluginConfigId = paymentPluginConfigId;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getSellerId() {
		return _sellerId;
	}

	public void setSellerId(long sellerId) {
		_columnBitmask |= SELLERID_COLUMN_BITMASK;

		if (!_setOriginalSellerId) {
			_setOriginalSellerId = true;

			_originalSellerId = _sellerId;
		}

		_sellerId = sellerId;
	}

	public long getOriginalSellerId() {
		return _originalSellerId;
	}

	public long getPaymentPluginId() {
		return _paymentPluginId;
	}

	public void setPaymentPluginId(long paymentPluginId) {
		_columnBitmask = -1L;

		if (!_setOriginalPaymentPluginId) {
			_setOriginalPaymentPluginId = true;

			_originalPaymentPluginId = _paymentPluginId;
		}

		_paymentPluginId = paymentPluginId;
	}

	public long getOriginalPaymentPluginId() {
		return _originalPaymentPluginId;
	}

	public String getConfig() {
		if (_config == null) {
			return StringPool.BLANK;
		}
		else {
			return _config;
		}
	}

	public void setConfig(String config) {
		_config = config;
	}

	public boolean getConfigured() {
		return _configured;
	}

	public boolean isConfigured() {
		return _configured;
	}

	public void setConfigured(boolean configured) {
		_configured = configured;
	}

	public boolean getDefaultPlugin() {
		return _defaultPlugin;
	}

	public boolean isDefaultPlugin() {
		return _defaultPlugin;
	}

	public void setDefaultPlugin(boolean defaultPlugin) {
		_columnBitmask |= DEFAULTPLUGIN_COLUMN_BITMASK;

		if (!_setOriginalDefaultPlugin) {
			_setOriginalDefaultPlugin = true;

			_originalDefaultPlugin = _defaultPlugin;
		}

		_defaultPlugin = defaultPlugin;
	}

	public boolean getOriginalDefaultPlugin() {
		return _originalDefaultPlugin;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PaymentPluginConfig.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PaymentPluginConfig toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (PaymentPluginConfig)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		PaymentPluginConfigImpl paymentPluginConfigImpl = new PaymentPluginConfigImpl();

		paymentPluginConfigImpl.setUuid(getUuid());
		paymentPluginConfigImpl.setCompanyId(getCompanyId());
		paymentPluginConfigImpl.setGroupId(getGroupId());
		paymentPluginConfigImpl.setUserId(getUserId());
		paymentPluginConfigImpl.setPaymentPluginConfigId(getPaymentPluginConfigId());
		paymentPluginConfigImpl.setCreateDate(getCreateDate());
		paymentPluginConfigImpl.setModifiedDate(getModifiedDate());
		paymentPluginConfigImpl.setSellerId(getSellerId());
		paymentPluginConfigImpl.setPaymentPluginId(getPaymentPluginId());
		paymentPluginConfigImpl.setConfig(getConfig());
		paymentPluginConfigImpl.setConfigured(getConfigured());
		paymentPluginConfigImpl.setDefaultPlugin(getDefaultPlugin());

		paymentPluginConfigImpl.resetOriginalValues();

		return paymentPluginConfigImpl;
	}

	public int compareTo(PaymentPluginConfig paymentPluginConfig) {
		int value = 0;

		if (getPaymentPluginId() < paymentPluginConfig.getPaymentPluginId()) {
			value = -1;
		}
		else if (getPaymentPluginId() > paymentPluginConfig.getPaymentPluginId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PaymentPluginConfig paymentPluginConfig = null;

		try {
			paymentPluginConfig = (PaymentPluginConfig)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = paymentPluginConfig.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PaymentPluginConfigModelImpl paymentPluginConfigModelImpl = this;

		paymentPluginConfigModelImpl._originalUuid = paymentPluginConfigModelImpl._uuid;

		paymentPluginConfigModelImpl._originalCompanyId = paymentPluginConfigModelImpl._companyId;

		paymentPluginConfigModelImpl._setOriginalCompanyId = false;

		paymentPluginConfigModelImpl._originalGroupId = paymentPluginConfigModelImpl._groupId;

		paymentPluginConfigModelImpl._setOriginalGroupId = false;

		paymentPluginConfigModelImpl._originalSellerId = paymentPluginConfigModelImpl._sellerId;

		paymentPluginConfigModelImpl._setOriginalSellerId = false;

		paymentPluginConfigModelImpl._originalPaymentPluginId = paymentPluginConfigModelImpl._paymentPluginId;

		paymentPluginConfigModelImpl._setOriginalPaymentPluginId = false;

		paymentPluginConfigModelImpl._originalDefaultPlugin = paymentPluginConfigModelImpl._defaultPlugin;

		paymentPluginConfigModelImpl._setOriginalDefaultPlugin = false;

		paymentPluginConfigModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PaymentPluginConfig> toCacheModel() {
		PaymentPluginConfigCacheModel paymentPluginConfigCacheModel = new PaymentPluginConfigCacheModel();

		paymentPluginConfigCacheModel.uuid = getUuid();

		String uuid = paymentPluginConfigCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			paymentPluginConfigCacheModel.uuid = null;
		}

		paymentPluginConfigCacheModel.companyId = getCompanyId();

		paymentPluginConfigCacheModel.groupId = getGroupId();

		paymentPluginConfigCacheModel.userId = getUserId();

		paymentPluginConfigCacheModel.paymentPluginConfigId = getPaymentPluginConfigId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			paymentPluginConfigCacheModel.createDate = createDate.getTime();
		}
		else {
			paymentPluginConfigCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			paymentPluginConfigCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			paymentPluginConfigCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		paymentPluginConfigCacheModel.sellerId = getSellerId();

		paymentPluginConfigCacheModel.paymentPluginId = getPaymentPluginId();

		paymentPluginConfigCacheModel.config = getConfig();

		String config = paymentPluginConfigCacheModel.config;

		if ((config != null) && (config.length() == 0)) {
			paymentPluginConfigCacheModel.config = null;
		}

		paymentPluginConfigCacheModel.configured = getConfigured();

		paymentPluginConfigCacheModel.defaultPlugin = getDefaultPlugin();

		return paymentPluginConfigCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", paymentPluginConfigId=");
		sb.append(getPaymentPluginConfigId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", sellerId=");
		sb.append(getSellerId());
		sb.append(", paymentPluginId=");
		sb.append(getPaymentPluginId());
		sb.append(", config=");
		sb.append(getConfig());
		sb.append(", configured=");
		sb.append(getConfigured());
		sb.append(", defaultPlugin=");
		sb.append(getDefaultPlugin());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.beorn.onlinepayment.model.PaymentPluginConfig");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentPluginConfigId</column-name><column-value><![CDATA[");
		sb.append(getPaymentPluginConfigId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sellerId</column-name><column-value><![CDATA[");
		sb.append(getSellerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentPluginId</column-name><column-value><![CDATA[");
		sb.append(getPaymentPluginId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>config</column-name><column-value><![CDATA[");
		sb.append(getConfig());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>configured</column-name><column-value><![CDATA[");
		sb.append(getConfigured());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>defaultPlugin</column-name><column-value><![CDATA[");
		sb.append(getDefaultPlugin());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PaymentPluginConfig.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			PaymentPluginConfig.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _paymentPluginConfigId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _sellerId;
	private long _originalSellerId;
	private boolean _setOriginalSellerId;
	private long _paymentPluginId;
	private long _originalPaymentPluginId;
	private boolean _setOriginalPaymentPluginId;
	private String _config;
	private boolean _configured;
	private boolean _defaultPlugin;
	private boolean _originalDefaultPlugin;
	private boolean _setOriginalDefaultPlugin;
	private long _columnBitmask;
	private PaymentPluginConfig _escapedModelProxy;
}